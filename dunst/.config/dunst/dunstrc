[global]
    follow = mouse                  # Display notification on focused monitor
    geometry = "500-80+115"        
    # [{width}]x{height}[+/-{x}+/-{y}]
    indicate_hidden = yes           # Show how many messages are currently hidden (because of geometry).
    shrink = no                     # Shrink window if it's smaller than the width.  Will be ignored if width if 0
    transparency = 50               # The transparency of the window.  Range: [0; 100].
    notification_height = 0         # The height of the entire notification.  If the height is smaller than the font height and padding combined, it will be raised to the font height and padding.

    separator_height = 0            # Draw a line of "separator_height" pixel height between two notifications.
    padding = 8                     # Padding between text and separator.
    horizontal_padding = 8 
    frame_color = "#3d4148"
	frame_width = 3
    separator_color = auto

    sort = yes                      # Sort messages by urgency.
    idle_threshold = 120            # Don't remove messages, if the user is idle (no mouse or keyboard input)
    font = Ubuntu Mono 14
    line_height = 0                 # The spacing between lines.  If the height is smaller than the font height, it will get raised to the font height.
    markup = full                   # <b> bold, <i> italic, <s> strikthrough, <u> underline
    format = "<b>%s</b>\n%b\n%p"  
                                    # %a appname; %s summary; %b body; %i iconname (including its path); %I iconname (without its path); %p progress value if set ([  0%] to [100%]) or nothing; %n progress value if set without any extra characters; %% Literal %; markup is allowed
    alignment = left                
                                    # Alignment of message text. Possible values are "left", "center" and "right".
    show_age_threshold = 60         # Show age of message if message is older than show_age_threshold seconds. Set to -1 to disable.
    word_wrap = yes                 # Split notifications into multiple lines if they don't fit into geometry.
    ellipsize = middle             
                                    # When word_wrap is set to no, specify where to ellipsize long lines. Possible values are "start", "middle" and "end".
    ignore_newline = no             # Ignore newlines '\n' in notifications.

    stack_duplicates = true         # Merge multiple notifications with the same content
    hide_duplicate_count = false    # Hide the count of merged notifications with the same content
    show_indicators = false         # Display indicators for URLs (U) and actions (A).

    icon_position = left            # Align icons left/right/off
    max_icon_size = 32              # Scale larger icons down to this size, set to 0 to disable
    icon_path = /usr/share/icons/Papirus-Dark/32x32/apps/:/usr/share/icons/Papirus-Dark/32x32/categories/:/usr/share/icons/Papirus-Dark/32x32/devices/:/usr/share/icons/Papirus-Dark/32x32/emblems/:/usr/share/icons/Papirus-Dark/32x32/emotes/:/usr/share/icons/Papirus-Dark/32x32/mimetypes/:/usr/share/icons/Papirus-Dark/32x32/places/:/usr/share/icons/Papirus-Dark/32x32/status/

    sticky_history = yes            # Should a notification popped up from history be sticky or timeout as if it would normally do.
    history_length = 1000           # Maximum amount of notifications kept in history

    dmenu = rofi -dmenu -p dunst:   # dmenu path.
    browser = /usr/bin/chromium -new-tab # Browser for opening urls in context menu.
    always_run_script = true        # Always run rule-defined scripts, even if the notification is suppressed
    title = Dunst                   # Define the title of the windows spawned by dunst
    class = Dunst                   # Define the class of the windows spawned by dunst
    startup_notification = true     # Print a notification on startup.

    force_xinerama = false
[experimental]
    per_monitor_dpi = false

[shortcuts]
    # Shortcuts are specified as [modifier+][modifier+]...key
    # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
    # "mod3" and "mod4" (windows-key).
    # Xev might be helpful to find names for keys.

    # Close notification.
    close = ctrl+space

    # Close all notifications.
    close_all = ctrl+shift+space

    # Redisplay last message(s).
    history = ctrl+grave

    # Context menu.
    context = ctrl+shift+period

[urgency_low]
    background = "#000000"
    foreground = "#98c379"
    timeout = 20
    #icon = /path/to/icon

[urgency_normal]
    background = "#000000"
    foreground = "#e1e4e8"
    timeout = 20
    #icon = /path/to/icon

[urgency_critical]
    background = "#000000"
    foreground = "#e06c75"
    timeout = 0
    #icon = /path/to/icon

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
# Messages can be matched by "appname", "summary", "body", "icon", "category",
# "msg_urgency" and you can override the "timeout", "urgency", "foreground",
# "background", "new_icon" and "format".
# Shell-like globbing will get expanded.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

[Spotify]
    appname = Spotify
    format = ""

#[Messenger]
	#appname = Electron
	#summary = "*test*"
    #foreground = "#c678dd"

# vim: ft=cfg
